{"ast":null,"code":"import { ProductService } from '../product/services/product.service';\nimport { forkJoin } from 'rxjs';\nimport * as i0 from \"@angular/core\";\nimport * as i1 from \"../product/services/product.service\";\nimport * as i2 from \"@angular/common\";\nfunction CardComponent_div_1_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"div\", 2)(1, \"div\", 3);\n    i0.ɵɵelement(2, \"img\", 4);\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementStart(3, \"div\", 5)(4, \"p\", 6);\n    i0.ɵɵtext(5);\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementStart(6, \"p\", 7);\n    i0.ɵɵtext(7);\n    i0.ɵɵelementEnd()()();\n  }\n  if (rf & 2) {\n    const productName_r1 = ctx.$implicit;\n    const i_r2 = ctx.index;\n    const ctx_r2 = i0.ɵɵnextContext();\n    i0.ɵɵadvance(5);\n    i0.ɵɵtextInterpolate(productName_r1);\n    i0.ɵɵadvance(2);\n    i0.ɵɵtextInterpolate1(\"Quantity: \", ctx_r2.products[i_r2].quantity, \"\");\n  }\n}\nexport let CardComponent = /*#__PURE__*/(() => {\n  class CardComponent {\n    constructor(productService) {\n      this.productService = productService;\n      this.products = []; // LocalStorage'den alınacak ürünler burada tutulacak\n      this.productNames = [];\n      this.productIds = [];\n      this.cartItems = [{\n        id: 1,\n        name: 'T-shirt',\n        price: 29.99,\n        quantity: 2,\n        image: 'https://example.com/t-shirt.jpg'\n      }, {\n        id: 2,\n        name: 'Jeans',\n        price: 49.99,\n        quantity: 1,\n        image: 'https://example.com/jeans.jpg'\n      }, {\n        id: 3,\n        name: 'Sneakers',\n        price: 79.99,\n        quantity: 1,\n        image: 'https://example.com/sneakers.jpg'\n      }];\n    }\n    ngOnInit() {\n      this.loadProductsFromLocalStorage();\n      this.loadProductIds();\n      this.loadProductNames();\n      console.log('products', this.products);\n      const storedProducts = localStorage.getItem('cart');\n      console.log('Stored Products:', storedProducts);\n      console.log('productIdlerr', this.productIds);\n      console.log('productName', this.productNames);\n    }\n    // LocalStorage'den ürünleri yükle\n    loadProductsFromLocalStorage() {\n      const storedProducts = localStorage.getItem('cart'); // 'cart' anahtarını kullanarak localStorage'den veri alıyoruz\n      if (storedProducts) {\n        this.products = JSON.parse(storedProducts); // Veriyi JSON formatından diziye dönüştürüyoruz\n      }\n      console.log(storedProducts);\n    }\n    loadProductIds() {\n      const storedProducts = localStorage.getItem('cart');\n      if (storedProducts) {\n        const products = JSON.parse(storedProducts);\n        console.log('Tüm Ürünler:', products);\n        // Sadece geçerli (null olmayan) productId'leri filtrele\n        this.productIds = products.filter(item => item.productId !== null && item.productId !== undefined).map(item => item.productId);\n        console.log('Product IDs:', this.productIds);\n        return this.productIds; // ID'lerin listesi\n      }\n      return []; // Eğer veri yoksa boş bir dizi döndür\n    }\n    loadProductNames() {\n      // Product ID'lerine göre getProductById servisini çağır\n      const productRequests = this.productIds.map(id => this.productService.getProductById(id) // her id için servisi çağırıyoruz\n      );\n      // Tüm istekleri paralel olarak çalıştır\n      forkJoin(productRequests).subscribe(products => {\n        // Gelen ürünlerden name bilgilerini al ve productNames dizisine ekle\n        this.productNames = products.map(product => product.name);\n        console.log('Product Names:', this.productNames);\n      });\n    }\n    static #_ = this.ɵfac = function CardComponent_Factory(t) {\n      return new (t || CardComponent)(i0.ɵɵdirectiveInject(i1.ProductService));\n    };\n    static #_2 = this.ɵcmp = /*@__PURE__*/i0.ɵɵdefineComponent({\n      type: CardComponent,\n      selectors: [[\"app-card\"]],\n      decls: 2,\n      vars: 1,\n      consts: [[1, \"cart-container\"], [\"class\", \"cart-item\", 4, \"ngFor\", \"ngForOf\"], [1, \"cart-item\"], [1, \"product-image\"], [\"src\", \"https://example.com/product.jpg\", \"alt\", \"Product Image\"], [1, \"product-details\"], [1, \"product-name\"], [1, \"product-quantity\"]],\n      template: function CardComponent_Template(rf, ctx) {\n        if (rf & 1) {\n          i0.ɵɵelementStart(0, \"div\", 0);\n          i0.ɵɵtemplate(1, CardComponent_div_1_Template, 8, 2, \"div\", 1);\n          i0.ɵɵelementEnd();\n        }\n        if (rf & 2) {\n          i0.ɵɵadvance();\n          i0.ɵɵproperty(\"ngForOf\", ctx.productNames);\n        }\n      },\n      dependencies: [i2.NgForOf],\n      styles: [\".card-img-top[_ngcontent-%COMP%]{height:200px;object-fit:cover}.card-body[_ngcontent-%COMP%]{background-color:#f8f9fa}.btn-secondary[_ngcontent-%COMP%]{width:40px;height:40px;padding:0}.text-right[_ngcontent-%COMP%]{text-align:right}h4[_ngcontent-%COMP%]{font-weight:700}\"]\n    });\n  }\n  return CardComponent;\n})();","map":null,"metadata":{},"sourceType":"module","externalDependencies":[]}
{"ast":null,"code":"import { FormBuilder, Validators } from '@angular/forms';\nimport { MatPaginator } from '@angular/material/paginator';\nimport { MatSort } from '@angular/material/sort';\nimport { MatTableDataSource } from '@angular/material/table';\nimport { AlertifyService } from 'app/core/services/alertify.service';\nimport { LookUpService } from 'app/core/services/LookUp.service';\nimport { AuthService } from 'app/core/components/admin/login/services/auth.service';\nimport { Depo } from './models/depo';\nimport { DepoService } from './services/depo.service';\nimport * as i0 from \"@angular/core\";\nimport * as i1 from \"./services/depo.service\";\nimport * as i2 from \"app/core/services/LookUp.service\";\nimport * as i3 from \"app/core/services/alertify.service\";\nimport * as i4 from \"@angular/forms\";\nimport * as i5 from \"app/core/components/admin/login/services/auth.service\";\nimport * as i6 from \"@angular/common\";\nfunction DepoComponent_div_8_p_14_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"p\");\n    i0.ɵɵtext(1, \"Bu \\u00FCr\\u00FCn silinmi\\u015F.\");\n    i0.ɵɵelementEnd();\n  }\n}\nfunction DepoComponent_div_8_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"div\", 6)(1, \"div\", 7);\n    i0.ɵɵelement(2, \"img\", 8);\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementStart(3, \"div\", 9)(4, \"h3\");\n    i0.ɵɵtext(5);\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementStart(6, \"p\");\n    i0.ɵɵtext(7, \"Status: \");\n    i0.ɵɵelementStart(8, \"span\");\n    i0.ɵɵtext(9);\n    i0.ɵɵelementEnd()();\n    i0.ɵɵelementStart(10, \"p\");\n    i0.ɵɵtext(11);\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementStart(12, \"p\");\n    i0.ɵɵtext(13);\n    i0.ɵɵelementEnd();\n    i0.ɵɵtemplate(14, DepoComponent_div_8_p_14_Template, 2, 0, \"p\", 10);\n    i0.ɵɵelementEnd()();\n  }\n  if (rf & 2) {\n    const product_r1 = ctx.$implicit;\n    i0.ɵɵadvance(5);\n    i0.ɵɵtextInterpolate(product_r1.name || \"\\u00DCr\\u00FCn Ad\\u0131 Yok\");\n    i0.ɵɵadvance(3);\n    i0.ɵɵclassProp(\"available\", product_r1.status)(\"not-available\", !product_r1.status);\n    i0.ɵɵadvance();\n    i0.ɵɵtextInterpolate1(\" \", product_r1.status ? \"Aktif\" : \"Pasif\", \"\");\n    i0.ɵɵadvance(2);\n    i0.ɵɵtextInterpolate1(\"Renk: \", product_r1.colorId || \"Renk Se\\u00E7ili De\\u011Fil\", \"\");\n    i0.ɵɵadvance(2);\n    i0.ɵɵtextInterpolate1(\"Beden: \", product_r1.size || \"Beden Se\\u00E7ili De\\u011Fil\", \"\");\n    i0.ɵɵadvance();\n    i0.ɵɵproperty(\"ngIf\", product_r1.isDeleted);\n  }\n}\nexport let DepoComponent = /*#__PURE__*/(() => {\n  class DepoComponent {\n    constructor(depoService, lookupService, alertifyService, formBuilder, authService) {\n      this.depoService = depoService;\n      this.lookupService = lookupService;\n      this.alertifyService = alertifyService;\n      this.formBuilder = formBuilder;\n      this.authService = authService;\n      this.displayedColumns = ['id', 'createdUserId', 'createdDate', 'lastUpdatedUserId', 'lastUpdatedDate', 'status', 'isDeleted', 'productId', 'productName', 'colorId', 'quantity', 'update', 'delete'];\n      this.depo = new Depo();\n    }\n    ngAfterViewInit() {\n      this.getDepoList();\n    }\n    ngOnInit() {\n      this.createDepoAddForm();\n    }\n    getDepoList() {\n      this.depoService.getDepoList().subscribe(data => {\n        this.depoList = data;\n        this.dataSource = new MatTableDataSource(data);\n        this.configDataTable();\n      });\n    }\n    save() {\n      if (this.depoAddForm.valid) {\n        this.depo = Object.assign({}, this.depoAddForm.value);\n        if (this.depo.id == 0) this.addDepo();else this.updateDepo();\n      }\n    }\n    addDepo() {\n      this.depoService.addDepo(this.depo).subscribe(data => {\n        this.getDepoList();\n        this.depo = new Depo();\n        jQuery('#depo').modal('hide');\n        this.alertifyService.success(data);\n        this.clearFormGroup(this.depoAddForm);\n      });\n    }\n    updateDepo() {\n      this.depoService.updateDepo(this.depo).subscribe(data => {\n        var index = this.depoList.findIndex(x => x.id == this.depo.id);\n        this.depoList[index] = this.depo;\n        this.dataSource = new MatTableDataSource(this.depoList);\n        this.configDataTable();\n        this.depo = new Depo();\n        jQuery('#depo').modal('hide');\n        this.alertifyService.success(data);\n        this.clearFormGroup(this.depoAddForm);\n      });\n    }\n    createDepoAddForm() {\n      this.depoAddForm = this.formBuilder.group({\n        id: [0],\n        createdUserId: [0, Validators.required],\n        createdDate: [null, Validators.required],\n        lastUpdatedUserId: [0, Validators.required],\n        lastUpdatedDate: [null, Validators.required],\n        status: [false, Validators.required],\n        isDeleted: [false, Validators.required],\n        productId: [0, Validators.required],\n        productName: [\"\", Validators.required],\n        colorId: [0, Validators.required],\n        quantity: [0, Validators.required]\n      });\n    }\n    deleteDepo(depoId) {\n      this.depoService.deleteDepo(depoId).subscribe(data => {\n        this.alertifyService.success(data.toString());\n        this.depoList = this.depoList.filter(x => x.id != depoId);\n        this.dataSource = new MatTableDataSource(this.depoList);\n        this.configDataTable();\n      });\n    }\n    getDepoById(depoId) {\n      this.clearFormGroup(this.depoAddForm);\n      this.depoService.getDepoById(depoId).subscribe(data => {\n        this.depo = data;\n        this.depoAddForm.patchValue(data);\n      });\n    }\n    clearFormGroup(group) {\n      group.markAsUntouched();\n      group.reset();\n      Object.keys(group.controls).forEach(key => {\n        group.get(key).setErrors(null);\n        if (key == 'id') group.get(key).setValue(0);\n      });\n    }\n    checkClaim(claim) {\n      return this.authService.claimGuard(claim);\n    }\n    configDataTable() {\n      this.dataSource.paginator = this.paginator;\n      this.dataSource.sort = this.sort;\n    }\n    applyFilter(event) {\n      const filterValue = event.target.value;\n      this.dataSource.filter = filterValue.trim().toLowerCase();\n      if (this.dataSource.paginator) {\n        this.dataSource.paginator.firstPage();\n      }\n    }\n    static #_ = this.ɵfac = function DepoComponent_Factory(t) {\n      return new (t || DepoComponent)(i0.ɵɵdirectiveInject(i1.DepoService), i0.ɵɵdirectiveInject(i2.LookUpService), i0.ɵɵdirectiveInject(i3.AlertifyService), i0.ɵɵdirectiveInject(i4.FormBuilder), i0.ɵɵdirectiveInject(i5.AuthService));\n    };\n    static #_2 = this.ɵcmp = /*@__PURE__*/i0.ɵɵdefineComponent({\n      type: DepoComponent,\n      selectors: [[\"app-depo\"]],\n      viewQuery: function DepoComponent_Query(rf, ctx) {\n        if (rf & 1) {\n          i0.ɵɵviewQuery(MatPaginator, 5);\n          i0.ɵɵviewQuery(MatSort, 5);\n        }\n        if (rf & 2) {\n          let _t;\n          i0.ɵɵqueryRefresh(_t = i0.ɵɵloadQuery()) && (ctx.paginator = _t.first);\n          i0.ɵɵqueryRefresh(_t = i0.ɵɵloadQuery()) && (ctx.sort = _t.first);\n        }\n      },\n      decls: 9,\n      vars: 2,\n      consts: [[1, \"container\"], [1, \"products-header\"], [1, \"search-container\"], [\"type\", \"text\", \"placeholder\", \"\\u00DCr\\u00FCn ara...\", 1, \"search-input\", 3, \"ngModelChange\", \"input\", \"ngModel\"], [1, \"product-cards\"], [\"class\", \"product-card\", 4, \"ngFor\", \"ngForOf\"], [1, \"product-card\"], [1, \"card-header\"], [\"src\", \"https://img.freepik.com/free-vector/white-product-podium-with-green-tropical-palm-leaves-golden-round-arch-green-wall_87521-3023.jpg\", \"alt\", \"Product Icon\", 1, \"product-icon\"], [1, \"card-body\"], [4, \"ngIf\"]],\n      template: function DepoComponent_Template(rf, ctx) {\n        if (rf & 1) {\n          i0.ɵɵelementStart(0, \"div\", 0)(1, \"div\", 1);\n          i0.ɵɵtext(2, \" \\u00DCr\\u00FCnlerimiz \");\n          i0.ɵɵelementStart(3, \"span\");\n          i0.ɵɵtext(4, \"Ke\\u015Ffedin!\");\n          i0.ɵɵelementEnd()();\n          i0.ɵɵelementStart(5, \"div\", 2)(6, \"input\", 3);\n          i0.ɵɵtwoWayListener(\"ngModelChange\", function DepoComponent_Template_input_ngModelChange_6_listener($event) {\n            i0.ɵɵtwoWayBindingSet(ctx.searchText, $event) || (ctx.searchText = $event);\n            return $event;\n          });\n          i0.ɵɵlistener(\"input\", function DepoComponent_Template_input_input_6_listener() {\n            return ctx.onSearchChange();\n          });\n          i0.ɵɵelementEnd()();\n          i0.ɵɵelementStart(7, \"div\", 4);\n          i0.ɵɵtemplate(8, DepoComponent_div_8_Template, 15, 9, \"div\", 5);\n          i0.ɵɵelementEnd()();\n        }\n        if (rf & 2) {\n          i0.ɵɵadvance(6);\n          i0.ɵɵtwoWayProperty(\"ngModel\", ctx.searchText);\n          i0.ɵɵadvance(2);\n          i0.ɵɵproperty(\"ngForOf\", ctx.filteredProducts);\n        }\n      },\n      dependencies: [i6.NgForOf, i6.NgIf, i4.DefaultValueAccessor, i4.NgControlStatus, i4.NgModel]\n    });\n  }\n  return DepoComponent;\n})();","map":null,"metadata":{},"sourceType":"module","externalDependencies":[]}
{"ast":null,"code":"import { MatDialog } from '@angular/material/dialog';\nimport { ColorService } from '../color/services/color.service';\nimport { FormBuilder, Validators } from '@angular/forms';\nimport { UpdateColorDialogComponent } from './update-color-dialog/update-color-dialog.component';\nimport * as i0 from \"@angular/core\";\nimport * as i1 from \"@angular/material/dialog\";\nimport * as i2 from \"../color/services/color.service\";\nimport * as i3 from \"@angular/forms\";\nexport let ColorDialogComponent = /*#__PURE__*/(() => {\n  class ColorDialogComponent {\n    constructor(dialog, colorService, fb) {\n      this.dialog = dialog;\n      this.colorService = colorService;\n      this.fb = fb;\n      this.colors = [];\n      this.colorForm = this.fb.group({\n        name: ['', Validators.required],\n        code: [null, [Validators.required, Validators.pattern(/^[0-9]+$/)]]\n      });\n    }\n    ngOnInit() {\n      this.getColors();\n    }\n    getColors() {\n      this.colorService.getColorList().subscribe(data => {\n        this.colors = data.filter(color => !color.isDeleted);\n      });\n    }\n    addColor() {\n      if (this.colorForm.valid) {\n        const newColor = this.colorForm.value;\n        this.colorService.addColor(newColor).subscribe(() => {\n          this.getColors();\n          this.colorForm.reset();\n        });\n      }\n    }\n    updateColor(color) {\n      const dialogRef = this.dialog.open(UpdateColorDialogComponent, {\n        width: '400px',\n        data: {\n          color\n        } // Seçilen renk bilgileri gönderiliyor\n      });\n      dialogRef.afterClosed().subscribe(updatedColor => {\n        if (updatedColor) {\n          this.colorService.updateColor(updatedColor).subscribe(() => {\n            this.getColors(); // Listeyi güncelle\n          });\n        }\n      });\n    }\n    deleteColor(id) {\n      this.colorService.deleteColor(id).subscribe(() => {\n        this.getColors();\n      });\n    }\n    static #_ = this.ɵfac = function ColorDialogComponent_Factory(t) {\n      return new (t || ColorDialogComponent)(i0.ɵɵdirectiveInject(i1.MatDialog), i0.ɵɵdirectiveInject(i2.ColorService), i0.ɵɵdirectiveInject(i3.FormBuilder));\n    };\n    static #_2 = this.ɵcmp = /*@__PURE__*/i0.ɵɵdefineComponent({\n      type: ColorDialogComponent,\n      selectors: [[\"app-color-dialog\"]],\n      decls: 0,\n      vars: 0,\n      template: function ColorDialogComponent_Template(rf, ctx) {}\n    });\n  }\n  return ColorDialogComponent;\n})();","map":null,"metadata":{},"sourceType":"module","externalDependencies":[]}
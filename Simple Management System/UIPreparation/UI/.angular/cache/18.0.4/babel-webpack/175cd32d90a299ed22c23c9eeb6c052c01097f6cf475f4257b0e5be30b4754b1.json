{"ast":null,"code":"import { MatDialogRef, MAT_DIALOG_DATA } from '@angular/material/dialog';\nimport { FormBuilder, Validators } from '@angular/forms';\nimport * as i0 from \"@angular/core\";\nimport * as i1 from \"@angular/material/dialog\";\nimport * as i2 from \"@angular/forms\";\nimport * as i3 from \"@angular/common\";\nimport * as i4 from \"@angular/material/button\";\nimport * as i5 from \"@angular/material/form-field\";\nimport * as i6 from \"@angular/material/input\";\nfunction UpdateColorDialogComponent_mat_error_8_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"mat-error\");\n    i0.ɵɵtext(1, \" Renk ad\\u0131 zorunludur. \");\n    i0.ɵɵelementEnd();\n  }\n}\nfunction UpdateColorDialogComponent_mat_error_13_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"mat-error\");\n    i0.ɵɵtext(1, \" Renk kodu zorunludur. \");\n    i0.ɵɵelementEnd();\n  }\n}\nfunction UpdateColorDialogComponent_mat_error_14_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"mat-error\");\n    i0.ɵɵtext(1, \" Renk kodu sadece say\\u0131lardan olu\\u015Fmal\\u0131d\\u0131r. \");\n    i0.ɵɵelementEnd();\n  }\n}\nexport let UpdateColorDialogComponent = /*#__PURE__*/(() => {\n  class UpdateColorDialogComponent {\n    constructor(dialogRef, data, fb) {\n      this.dialogRef = dialogRef;\n      this.data = data;\n      this.fb = fb;\n      // Gelen renk bilgileri ile form oluşturuluyor\n      this.updateColorForm = this.fb.group({\n        id: [data.color.id],\n        // ID sabit\n        name: [data.color.name, Validators.required],\n        // Renk adı zorunlu\n        code: [data.color.code, [Validators.required, Validators.pattern(/^[0-9]+$/)]] // Kod zorunlu, sayı\n      });\n    }\n    save() {\n      if (this.updateColorForm.valid) {\n        this.dialogRef.close(this.updateColorForm.value); // Form bilgilerini dialoga gönder\n      }\n    }\n    close() {\n      this.dialogRef.close(); // Dialogu kapat\n    }\n    static #_ = this.ɵfac = function UpdateColorDialogComponent_Factory(t) {\n      return new (t || UpdateColorDialogComponent)(i0.ɵɵdirectiveInject(i1.MatDialogRef), i0.ɵɵdirectiveInject(MAT_DIALOG_DATA), i0.ɵɵdirectiveInject(i2.FormBuilder));\n    };\n    static #_2 = this.ɵcmp = /*@__PURE__*/i0.ɵɵdefineComponent({\n      type: UpdateColorDialogComponent,\n      selectors: [[\"app-update-color-dialog\"]],\n      decls: 20,\n      vars: 4,\n      consts: [[\"mat-dialog-title\", \"\"], [\"mat-dialog-content\", \"\"], [3, \"formGroup\"], [\"appearance\", \"fill\", 1, \"full-width\"], [\"matInput\", \"\", \"formControlName\", \"name\"], [4, \"ngIf\"], [\"matInput\", \"\", \"type\", \"number\", \"formControlName\", \"code\"], [\"mat-dialog-actions\", \"\"], [\"mat-button\", \"\", 3, \"click\"], [\"mat-raised-button\", \"\", \"color\", \"primary\", 3, \"click\"]],\n      template: function UpdateColorDialogComponent_Template(rf, ctx) {\n        if (rf & 1) {\n          i0.ɵɵelementStart(0, \"h2\", 0);\n          i0.ɵɵtext(1, \"Renk G\\u00FCncelle\");\n          i0.ɵɵelementEnd();\n          i0.ɵɵelementStart(2, \"div\", 1)(3, \"form\", 2)(4, \"mat-form-field\", 3)(5, \"mat-label\");\n          i0.ɵɵtext(6, \"Renk Ad\\u0131\");\n          i0.ɵɵelementEnd();\n          i0.ɵɵelement(7, \"input\", 4);\n          i0.ɵɵtemplate(8, UpdateColorDialogComponent_mat_error_8_Template, 2, 0, \"mat-error\", 5);\n          i0.ɵɵelementEnd();\n          i0.ɵɵelementStart(9, \"mat-form-field\", 3)(10, \"mat-label\");\n          i0.ɵɵtext(11, \"Renk Kodu\");\n          i0.ɵɵelementEnd();\n          i0.ɵɵelement(12, \"input\", 6);\n          i0.ɵɵtemplate(13, UpdateColorDialogComponent_mat_error_13_Template, 2, 0, \"mat-error\", 5)(14, UpdateColorDialogComponent_mat_error_14_Template, 2, 0, \"mat-error\", 5);\n          i0.ɵɵelementEnd()()();\n          i0.ɵɵelementStart(15, \"div\", 7)(16, \"button\", 8);\n          i0.ɵɵlistener(\"click\", function UpdateColorDialogComponent_Template_button_click_16_listener() {\n            return ctx.close();\n          });\n          i0.ɵɵtext(17, \"\\u0130ptal\");\n          i0.ɵɵelementEnd();\n          i0.ɵɵelementStart(18, \"button\", 9);\n          i0.ɵɵlistener(\"click\", function UpdateColorDialogComponent_Template_button_click_18_listener() {\n            return ctx.save();\n          });\n          i0.ɵɵtext(19, \"Kaydet\");\n          i0.ɵɵelementEnd()();\n        }\n        if (rf & 2) {\n          let tmp_1_0;\n          let tmp_2_0;\n          let tmp_3_0;\n          i0.ɵɵadvance(3);\n          i0.ɵɵproperty(\"formGroup\", ctx.updateColorForm);\n          i0.ɵɵadvance(5);\n          i0.ɵɵproperty(\"ngIf\", (tmp_1_0 = ctx.updateColorForm.get(\"name\")) == null ? null : tmp_1_0.hasError(\"required\"));\n          i0.ɵɵadvance(5);\n          i0.ɵɵproperty(\"ngIf\", (tmp_2_0 = ctx.updateColorForm.get(\"code\")) == null ? null : tmp_2_0.hasError(\"required\"));\n          i0.ɵɵadvance();\n          i0.ɵɵproperty(\"ngIf\", (tmp_3_0 = ctx.updateColorForm.get(\"code\")) == null ? null : tmp_3_0.hasError(\"pattern\"));\n        }\n      },\n      dependencies: [i3.NgIf, i2.ɵNgNoValidate, i2.DefaultValueAccessor, i2.NumberValueAccessor, i2.NgControlStatus, i2.NgControlStatusGroup, i2.FormGroupDirective, i2.FormControlName, i4.MatButton, i5.MatFormField, i5.MatLabel, i5.MatError, i6.MatInput]\n    });\n  }\n  return UpdateColorDialogComponent;\n})();","map":null,"metadata":{},"sourceType":"module","externalDependencies":[]}
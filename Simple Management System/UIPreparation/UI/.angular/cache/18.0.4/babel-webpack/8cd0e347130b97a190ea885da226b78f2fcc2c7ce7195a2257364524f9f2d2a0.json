{"ast":null,"code":"import { HttpClient } from '@angular/common/http';\nimport { environment } from 'environments/environment';\nimport { map } from 'rxjs/operators';\nimport * as i0 from \"@angular/core\";\nimport * as i1 from \"@angular/common/http\";\nexport let ProductService = /*#__PURE__*/(() => {\n  class ProductService {\n    constructor(httpClient) {\n      this.httpClient = httpClient;\n    }\n    getProductList() {\n      return this.httpClient.get(environment.getApiUrl + '/products/getall');\n    }\n    getProductById(id) {\n      return this.httpClient.get(environment.getApiUrl + '/products/getbyid?id=' + id);\n    }\n    addProduct(product) {\n      return this.httpClient.post(environment.getApiUrl + '/products/', product, {\n        responseType: 'text'\n      });\n    }\n    updateProduct(product) {\n      return this.httpClient.put(environment.getApiUrl + '/products/', product, {\n        responseType: 'text'\n      });\n    }\n    deleteProduct(id) {\n      return this.httpClient.request('delete', environment.getApiUrl + '/products/', {\n        body: {\n          id: id\n        }\n      });\n    }\n    getProductName() {\n      return this.httpClient.get(this.apiUrl).pipe(map(data => {\n        return data.map(item => ({\n          name: item.name\n        })); // Sadece 'name' alanını alıyoruz\n      }));\n    }\n    static #_ = this.ɵfac = function ProductService_Factory(t) {\n      return new (t || ProductService)(i0.ɵɵinject(i1.HttpClient));\n    };\n    static #_2 = this.ɵprov = /*@__PURE__*/i0.ɵɵdefineInjectable({\n      token: ProductService,\n      factory: ProductService.ɵfac,\n      providedIn: 'root'\n    });\n  }\n  return ProductService;\n})();","map":null,"metadata":{},"sourceType":"module","externalDependencies":[]}
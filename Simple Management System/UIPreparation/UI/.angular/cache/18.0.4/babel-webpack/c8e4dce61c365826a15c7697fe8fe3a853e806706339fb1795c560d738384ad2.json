{"ast":null,"code":"var __decorate = this && this.__decorate || function (decorators, target, key, desc) {\n  var c = arguments.length,\n    r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc,\n    d;\n  if (typeof Reflect === \"object\" && typeof Reflect.decorate === \"function\") r = Reflect.decorate(decorators, target, key, desc);else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;\n  return c > 3 && r && Object.defineProperty(target, key, r), r;\n};\nimport { BrowserAnimationsModule } from \"@angular/platform-browser/animations\";\nimport { NgModule } from \"@angular/core\";\nimport { FormsModule, ReactiveFormsModule } from \"@angular/forms\";\nimport { HttpClient, HttpClientModule, HTTP_INTERCEPTORS } from \"@angular/common/http\";\nimport { RouterModule } from \"@angular/router\";\nimport { AppRoutingModule } from \"./app.routing\";\nimport { AppComponent } from \"./app.component\";\nimport { NgMultiSelectDropDownModule } from \"ng-multiselect-dropdown\";\nimport { NgbModule } from \"@ng-bootstrap/ng-bootstrap\";\nimport { TranslateModule, TranslateLoader } from \"@ngx-translate/core\";\nimport { ComponentsModule } from \"./core/modules/components.module\";\nimport { AdminLayoutComponent } from \"./core/components/app/layouts/admin-layout/admin-layout.component\";\nimport { TranslationService } from \"./core/services/Translation.service\";\nimport { SweetAlert2Module } from \"@sweetalert2/ngx-sweetalert2\";\nimport { LoginGuard } from \"./core/guards/login-guard\";\nimport { AuthInterceptorService } from \"./core/interceptors/auth-interceptor.service\";\nimport { HttpEntityRepositoryService } from \"./core/services/http-entity-repository.service\";\n// Angular Material Modules\nimport { MatDialogModule } from \"@angular/material/dialog\";\nimport { MatButtonModule } from \"@angular/material/button\";\nimport { MatIconModule } from \"@angular/material/icon\";\nimport { MatFormFieldModule } from \"@angular/material/form-field\";\nimport { MatInputModule } from \"@angular/material/input\";\nimport { MatSelectModule } from \"@angular/material/select\";\nimport { MatTableModule } from \"@angular/material/table\";\nimport { MatSortModule } from \"@angular/material/sort\";\nimport { MatPaginatorModule } from \"@angular/material/paginator\";\nimport { MatListModule } from '@angular/material/list';\n// Components\nimport { RegisterComponent } from \"./core/components/admin/register/register.component\";\nimport { CreateuserComponent } from \"./core/components/admin/createuser/createuser.component\";\n// Services\nimport { ColorService } from \"./core/components/app/color/services/color.service\";\nimport { ColorComponent } from \"./core/components/app/color/color.component\";\nimport { ColorDialogComponent } from \"./core/components/app/color-dialog/color-dialog.component\";\nimport { OrderComponent } from \"./core/components/app/order/order.component\";\nexport function tokenGetter() {\n  return localStorage.getItem(\"token\");\n}\nlet AppModule = class AppModule {};\nAppModule = __decorate([NgModule({\n  imports: [BrowserAnimationsModule,\n  // Animations support\n  FormsModule,\n  // Template-driven forms\n  ReactiveFormsModule,\n  // Reactive forms\n  HttpClientModule,\n  // HTTP requests\n  ComponentsModule,\n  // Custom components module\n  RouterModule,\n  // Routing module\n  AppRoutingModule,\n  // App routing\n  NgMultiSelectDropDownModule.forRoot(),\n  // Dropdown module\n  SweetAlert2Module.forRoot(),\n  // SweetAlert2 for notifications\n  NgbModule,\n  // Bootstrap module\n  TranslateModule.forRoot({\n    loader: {\n      provide: TranslateLoader,\n      useClass: TranslationService,\n      deps: [HttpClient]\n    }\n  }),\n  // Angular Material Modules\n  MatDialogModule, MatButtonModule, MatIconModule, MatFormFieldModule, MatInputModule, MatSelectModule, MatTableModule, MatSortModule, MatPaginatorModule, MatListModule],\n  declarations: [AppComponent, AdminLayoutComponent, RegisterComponent, CreateuserComponent, ColorComponent, ColorDialogComponent, OrderComponent],\n  providers: [LoginGuard, {\n    provide: HTTP_INTERCEPTORS,\n    useClass: AuthInterceptorService,\n    multi: true\n  }, HttpEntityRepositoryService, ColorService],\n  bootstrap: [AppComponent]\n})], AppModule);\nexport { AppModule };","map":null,"metadata":{},"sourceType":"module","externalDependencies":[]}
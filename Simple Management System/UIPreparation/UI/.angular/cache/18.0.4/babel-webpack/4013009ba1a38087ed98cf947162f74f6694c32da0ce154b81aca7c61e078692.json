{"ast":null,"code":"import { LocalStorageService } from 'app/core/services/local-storage.service';\nimport { Router } from '@angular/router';\nimport { AlertifyService } from 'app/core/services/alertify.service';\nimport { RegisterUser } from '../login/model/register-user'; // Kendi RegisterUser modelini eklemelisin\nimport { HttpClient, HttpHeaders } from '@angular/common/http';\nimport { environment } from 'environments/environment';\nimport { AuthService } from '../login/services/auth.service';\nimport * as i0 from \"@angular/core\";\nimport * as i1 from \"../login/services/auth.service\";\nimport * as i2 from \"app/core/services/local-storage.service\";\nimport * as i3 from \"@angular/router\";\nimport * as i4 from \"app/core/services/alertify.service\";\nimport * as i5 from \"@angular/common/http\";\nimport * as i6 from \"@angular/forms\";\n// import { log } from 'console';\nexport let RegisterComponent = /*#__PURE__*/(() => {\n  class RegisterComponent {\n    constructor(authService, localStorageService, router, alertifyService, httpClient) {\n      this.authService = authService;\n      this.localStorageService = localStorageService;\n      this.router = router;\n      this.alertifyService = alertifyService;\n      this.httpClient = httpClient;\n      this.registerUser = new RegisterUser(); // Yeni kullanıcı nesnesi\n    }\n    ngOnInit() {\n      // username initialisi yapılabilir\n    }\n    // Kayıt işlemi\n    register() {\n      if (this.isFormValid()) {\n        const headers = new HttpHeaders().set('Content-Type', 'application/json');\n        this.httpClient.post(environment.getApiUrl + \"/Auth/register\", this.registerUser, {\n          headers\n        }).subscribe(data => {\n          if (data.success) {\n            this.alertifyService.success('Kayıt başarılı!');\n            this.router.navigate(['/login']); // Kayıt başarıyla tamamlandıktan sonra giriş sayfasına yönlendir.\n          } else {\n            this.alertifyService.error(data.message);\n          }\n        }, error => {\n          console.error('Kayıt Hatası:', error);\n          this.alertifyService.error('Kayıt sırasında bir hata oluştu.');\n        });\n      } else {\n        this.alertifyService.warning('Lütfen tüm alanları doldurun.');\n      }\n    }\n    // Formun geçerliliğini kontrol et\n    isFormValid() {\n      return !!this.registerUser.fullName && !!this.registerUser.password && !!this.registerUser.email;\n    }\n    static #_ = this.ɵfac = function RegisterComponent_Factory(t) {\n      return new (t || RegisterComponent)(i0.ɵɵdirectiveInject(i1.AuthService), i0.ɵɵdirectiveInject(i2.LocalStorageService), i0.ɵɵdirectiveInject(i3.Router), i0.ɵɵdirectiveInject(i4.AlertifyService), i0.ɵɵdirectiveInject(i5.HttpClient));\n    };\n    static #_2 = this.ɵcmp = /*@__PURE__*/i0.ɵɵdefineComponent({\n      type: RegisterComponent,\n      selectors: [[\"app-register\"]],\n      decls: 22,\n      vars: 3,\n      consts: [[1, \"container\", \"mt-5\"], [1, \"row\", \"justify-content-center\"], [1, \"col-md-8\", \"col-lg-6\"], [1, \"card\", \"shadow-lg\", \"p-4\"], [1, \"text-center\", \"mb-4\"], [3, \"ngSubmit\"], [1, \"mb-3\"], [\"for\", \"fullName\", 1, \"form-label\"], [\"type\", \"text\", \"id\", \"fullName\", \"placeholder\", \"Enter your full name\", 1, \"form-control\", 3, \"ngModelChange\", \"ngModel\"], [\"for\", \"email\", 1, \"form-label\"], [\"type\", \"email\", \"id\", \"email\", \"placeholder\", \"Enter your email\", 1, \"form-control\", 3, \"ngModelChange\", \"ngModel\"], [\"for\", \"password\", 1, \"form-label\"], [\"type\", \"password\", \"id\", \"password\", \"placeholder\", \"Enter a secure password\", 1, \"form-control\", 3, \"ngModelChange\", \"ngModel\"], [1, \"d-grid\", \"gap-2\"], [\"type\", \"submit\", 1, \"btn\", \"btn-primary\"]],\n      template: function RegisterComponent_Template(rf, ctx) {\n        if (rf & 1) {\n          i0.ɵɵelementStart(0, \"div\", 0)(1, \"div\", 1)(2, \"div\", 2)(3, \"div\", 3)(4, \"h2\", 4);\n          i0.ɵɵtext(5, \"User Registration\");\n          i0.ɵɵelementEnd();\n          i0.ɵɵelementStart(6, \"form\", 5);\n          i0.ɵɵlistener(\"ngSubmit\", function RegisterComponent_Template_form_ngSubmit_6_listener() {\n            return ctx.register();\n          });\n          i0.ɵɵelementStart(7, \"div\", 6)(8, \"label\", 7);\n          i0.ɵɵtext(9, \"Full Name\");\n          i0.ɵɵelementEnd();\n          i0.ɵɵelementStart(10, \"input\", 8);\n          i0.ɵɵtwoWayListener(\"ngModelChange\", function RegisterComponent_Template_input_ngModelChange_10_listener($event) {\n            i0.ɵɵtwoWayBindingSet(ctx.registerUser.fullName, $event) || (ctx.registerUser.fullName = $event);\n            return $event;\n          });\n          i0.ɵɵelementEnd()();\n          i0.ɵɵelementStart(11, \"div\", 6)(12, \"label\", 9);\n          i0.ɵɵtext(13, \"Email Address\");\n          i0.ɵɵelementEnd();\n          i0.ɵɵelementStart(14, \"input\", 10);\n          i0.ɵɵtwoWayListener(\"ngModelChange\", function RegisterComponent_Template_input_ngModelChange_14_listener($event) {\n            i0.ɵɵtwoWayBindingSet(ctx.registerUser.email, $event) || (ctx.registerUser.email = $event);\n            return $event;\n          });\n          i0.ɵɵelementEnd()();\n          i0.ɵɵelementStart(15, \"div\", 6)(16, \"label\", 11);\n          i0.ɵɵtext(17, \"Password\");\n          i0.ɵɵelementEnd();\n          i0.ɵɵelementStart(18, \"input\", 12);\n          i0.ɵɵtwoWayListener(\"ngModelChange\", function RegisterComponent_Template_input_ngModelChange_18_listener($event) {\n            i0.ɵɵtwoWayBindingSet(ctx.registerUser.password, $event) || (ctx.registerUser.password = $event);\n            return $event;\n          });\n          i0.ɵɵelementEnd()();\n          i0.ɵɵelementStart(19, \"div\", 13)(20, \"button\", 14);\n          i0.ɵɵtext(21, \"Register\");\n          i0.ɵɵelementEnd()()()()()()();\n        }\n        if (rf & 2) {\n          i0.ɵɵadvance(10);\n          i0.ɵɵtwoWayProperty(\"ngModel\", ctx.registerUser.fullName);\n          i0.ɵɵadvance(4);\n          i0.ɵɵtwoWayProperty(\"ngModel\", ctx.registerUser.email);\n          i0.ɵɵadvance(4);\n          i0.ɵɵtwoWayProperty(\"ngModel\", ctx.registerUser.password);\n        }\n      },\n      dependencies: [i6.ɵNgNoValidate, i6.DefaultValueAccessor, i6.NgControlStatus, i6.NgControlStatusGroup, i6.NgModel, i6.NgForm],\n      encapsulation: 2\n    });\n  }\n  return RegisterComponent;\n})();","map":null,"metadata":{},"sourceType":"module","externalDependencies":[]}